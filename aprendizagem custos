pacman::p_load(ade4, arules, car, caret, corrplot, data.table, dplyr, DMwR, e1071, forcats, funModeling, ggplot2, mlbench, mltools, randomForest, rattle, tidyverse)

# empenhos contratos covid19 
empenhos_covid19 <- fread('https://dados.sc.gov.br/dataset/4b3d481c-0f57-4443-8e95-a13a49746c0d/resource/aa687a73-92fc-4d49-926a-c3f83f3aed85/download/empenhos_contratos.csv')

# Dummies
empenhos_covid19_D <- acm.disjonctif(as.data.frame(empenhos_covid19$DETIPOCONTRATO))
names(empenhos_covid19_D) <- c("Outros, "Aquisição", Serviços")

empenhos_covid19 <- cbind(empenhos_covid19, empenhos_covid19_D)

# Discretização
empenhos_covid19$NUPRAZO <- discretize(empenhos_covid19$NUPRAZO, method = "frequency", breaks = 2, labels = c("baixa", "alta"))

table(empenhos_covid19$NUPRAZO)

# Treino e Teste: Pré-processamento
particao_empenhos_covid19 = createDataPartition(empenhos_covid19$NUPRAZO, p=.7, list = F) 
treino_empenhos_covid19 = empenhos_covid19[particao_empenhos_covid19, ] 
teste_empenhos_covid19 = empenhos_covid19[-particao_empenhos_covid19, ] 

prop.table(table(treino_empenhos_covid19$NUPRAZO))

# Controle de treinamento
train.control <- trainControl(method = "cv", number = 10, verboseIter = T) 

matrizCusto <- matrix(c(0,1,1000,0), ncol = 2)
rownames(matrizCusto) <- levels(treino_empenhos_covid19$NUPRAZO)
colnames(matrizCusto) <- levels(treino_empenhos_covid19$NUPRAZO)
matrizCusto

empenhos_covid19_RF_CLASS <- randomForest(NUPRAZO ~ Outros + Aquisição + Serviços + TDI_03 + MHA_03, data = treino_empenhos_covid19, method = "cforest", parms = list(loss = matrizCusto))
empenhos_covid19_RF_CLASS

empenhos_covid19_C5_CLASS <- train(NUPRAZO ~ Outros + Aquisição + Serviços + TDI_03 + MHA_03, data = treino_empenhos_covid19, method = "C5.0Cost", trControl = train.control)
empenhos_covid19_C5_CLASS

# criar predição
predicao_empenhos_covid19_RF_CLASS = predict(empenhos_covid19_RF_CLASS, teste_empenhos_covid19) 
cm_empenhos_covid19_RF_CLASS <- confusionMatrix(predicao_empenhos_covid19_RF_CLASS, teste_empenhos_covid19$NUPRAZO)
cm_empenhos_covid19_RF_CLASS

predicao_empenhos_covid19_C5_CLASS = predict(empenhos_covid19_C5_CLASS, teste_empenhos_covid19) 
cm_empenhos_covid19_C5_CLASS <- confusionMatrix(predicao_empenhos_covid19_C5_CLASS, teste_empenhos_covid19$NUPRAZO)
cm_empenhos_covid19_C5_CLASS
